NAME PROG ; 数字输入与排序

DATA SEGMENT 
    ; 各输出信息
    MSG0 DB ' $'
    MSG1 DB 'PLEASE INPUT 10 DECIMAL NUMBERS(0~99): ','$'
    MSG2 DB 0DH,0AH,'NEXT: ', '$'
    MSG3 DB 0DH,0AH,'10 NUMBERS: ',0DH,0AH, '$'
    MSG4 DB 0DH,0AH,'MAX NUMBER: ','$'
    MSGERR1 DB 0DH,0AH,'[ERROR] INVALID INPUT: 0~99 REQUIRED! (0~99): ','$'
    ; 存储10个数字
    ORG 1000H
    NUMLIST DB 10 DUP(0)
DATA ENDS

STACK SEGMENT PARA STACK
    DB 100 DUP(?)
STACK ENDS

; 打印输出信息
PRINTMSG MACRO NUM
    PUSH AX
    PUSH DX
    MOV AH,9
	MOV DX,OFFSET MSG&NUM
	INT 21H
    POP DX
    POP AX
ENDM

CODE SEGMENT 
    ASSUME CS:CODE, DS:DATA, ES:DATA, SS:STACK

; 主程序
MAIN PROC FAR
START:
    ; 初始化
    MOV AX, DATA
    MOV DS, AX
    MOV ES, AX
    MOV AX, STACK
    MOV SS, AX
    
    ; 输入10个数字
    PRINTMSG 1    
    LEA SI, NUMLIST
    MOV CX, 10
INPUT_LOOP:
    PRINTMSG 2
    CALL INPUTNUM
    INC SI
    LOOP INPUT_LOOP
        
    ; 输出数字
    PRINTMSG 3
    LEA SI, NUMLIST
    MOV CX, 10
OUTPUT_LOOP:
    CALL OUTPUTNUM
    PRINTMSG 0
    INC SI
    LOOP OUTPUT_LOOP
    
    ; 找到最大值
    LEA SI, NUMLIST
    MOV CX, 10
    CALL FINDMAX
    MOV SI,DI
    PRINTMSG 4
    CALL OUTPUTNUM
    
    
    ; 排序(多次查找最大值并交换)
    LEA SI, NUMLIST
    MOV CX, 10
SORT_LOOP:
    CALL FINDMAX
    MOV AL,[SI]
    MOV AH,[DI]
    MOV [SI],AH
    MOV [DI],AL
    INC SI
    LOOP SORT_LOOP

    ; 输出数字
    PRINTMSG 3
    LEA SI, NUMLIST
    MOV CX, 10
OUTPUT_LOOP2:
    CALL OUTPUTNUM
    PRINTMSG 0
    INC SI
    LOOP OUTPUT_LOOP2

    ; 退出
    MOV AH, 4CH
    INT 21H
MAIN ENDP

; 从键盘获取数字 0~99 以BCD形式存储到 [SI]
INPUTNUM PROC NEAR
    PUSH AX
    PUSH DX
    PUSH CX
    
    ; 输入第一个字符
INPUTNUM_CHAR1:
    MOV DX,0
    CALL GETCHAR
    CALL ISDIGIT
    CMP AH,0FFH
    JNE INPUTNUM_CHAR1
    SUB AL,30H
    MOV DL,AL
    
    ; 输入第二个字符
    CALL GETCHAR
    CALL ISDIGIT
    CMP AH,0FH
    JE INPUTNUM_RETURN
    CMP AH,00H
    JE INPUTNUM_CHAR1
    SUB AL,30H
    MOV CL,4
    SHL DL,CL
    ADD DL,AL
    
    ; 输入第三个字符
    CALL GETCHAR
    CALL ISDIGIT
    CMP AH,0FH
    JE INPUTNUM_RETURN
    CMP AH,00H
    JE INPUTNUM_CHAR1
    PRINTMSG ERR1
    JMP INPUTNUM_CHAR1
    
    ; 完成BCD数字的存储
INPUTNUM_RETURN:
    MOV [SI],DL
    
    POP CX
    POP DX
    POP AX
    RET
INPUTNUM ENDP

; 从键盘获得一个字符存到 AL
GETCHAR PROC NEAR
    MOV AH, 01H
    INT 21H
    RET
GETCHAR ENDP

; 若AL为数字, AH=0FFH
; 若AL为空字符, AH=0FH
; 若AL为其他字符, AH=00H
ISDIGIT PROC NEAR
    CMP AL,0DH
    JE ISDIGIT_EMPTY
    CMP AL,20H
    JE ISDIGIT_EMPTY
    CMP AL,30H
    JB ISDIGIT_ERR
    CMP AL,39H
    JA ISDIGIT_ERR
    JMP ISDIGIT_DIGIT
ISDIGIT_DIGIT:
    MOV AH, 0FFH
    RET
ISDIGIT_EMPTY:
    MOV AH, 0FH
    RET
ISDIGIT_ERR:
    PRINTMSG ERR1
    MOV AH, 00H
    RET
ISDIGIT ENDP

; 查找从[SI]开始的CX个数字中最大的数字, 把结果的地址返回到DI
FINDMAX PROC NEAR
    PUSH CX
    PUSH SI
    PUSH DX
    PUSH AX
    
    MOV AL,[SI]
    MOV DI,SI
FINDMAX_LOOP:
    CMP AL,[SI]
    JA FINDMAX_NEXT 
    MOV AL,[SI]
    MOV DI,SI
FINDMAX_NEXT:
    INC SI
    LOOP FINDMAX_LOOP
    
    POP AX
    POP DX
    POP SI
    POP CX
    RET
FINDMAX ENDP

; 输出放在[SI]的数字(0~99)
OUTPUTNUM PROC NEAR
    PUSH AX
    PUSH DX
    PUSH CX
    MOV AX,0
    MOV AL,[SI]
    MOV CL,4
    SHL AX,CL
    OR AH,AH
    JZ OUTPUTNUM_2
    ADD AH,30H
    MOV DL,AH
    MOV AH,6
    INT 21H
OUTPUTNUM_2:
    MOV AL,[SI]
    AND AL,0FH
    ADD AL,30H
    MOV DL,AL
    MOV AH,6
    INT 21H
    POP CX
    POP DX
    POP AX
    RET
OUTPUTNUM ENDP

CODE ENDS

END START 